//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace flakysalt.CharacterKeybinds.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Loca {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Loca() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("flakysalt.CharacterKeybinds.Resources.Loca", typeof(Loca).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to + Add new binding.
        /// </summary>
        internal static string addNewBindingButtonText {
            get {
                return ResourceManager.GetString("addNewBindingButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Loading Data from API....
        /// </summary>
        internal static string apiLoadingHint {
            get {
                return ResourceManager.GetString("apiLoadingHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Apply.
        /// </summary>
        internal static string apply {
            get {
                return ResourceManager.GetString("apply", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character Specific Keybinds.
        /// </summary>
        internal static string characterSpecificKeybinds {
            get {
                return ResourceManager.GetString("characterSpecificKeybinds", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybinding to use for a specific character or specializations.
        /// </summary>
        internal static string characterSpecificKeybindsHint {
            get {
                return ResourceManager.GetString("characterSpecificKeybindsHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Core Specialization.
        /// </summary>
        internal static string coreSpecializationName {
            get {
                return ResourceManager.GetString("coreSpecializationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Select Character.
        /// </summary>
        internal static string defaultCharacterEntry {
            get {
                return ResourceManager.GetString("defaultCharacterEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default Keybinds.
        /// </summary>
        internal static string defaultKeybind {
            get {
                return ResourceManager.GetString("defaultKeybind", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Applies these keybindings in case there are no specific ones setup for a character.\nCan be disabled in the settings..
        /// </summary>
        internal static string defaultKeybindHint {
            get {
                return ResourceManager.GetString("defaultKeybindHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Keybinds.
        /// </summary>
        internal static string defaultKeybindsEntry {
            get {
                return ResourceManager.GetString("defaultKeybindsEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Specialization.
        /// </summary>
        internal static string defaultSpecializationEntry {
            get {
                return ResourceManager.GetString("defaultSpecializationEntry", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Delete.
        /// </summary>
        internal static string delete {
            get {
                return ResourceManager.GetString("delete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected keybinds folder is invalid. Please check your settings..
        /// </summary>
        internal static string errorMessageInvalidFolder {
            get {
                return ResourceManager.GetString("errorMessageInvalidFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Potential issues detected.
        /// </summary>
        internal static string errorMessageIssueCounter {
            get {
                return ResourceManager.GetString("errorMessageIssueCounter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing API key or insufficient permissions..
        /// </summary>
        internal static string errorMessageMissingApiPermissions {
            get {
                return ResourceManager.GetString("errorMessageMissingApiPermissions", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Old keybinds format found. Please go to the Migration tab to update your keybinds..
        /// </summary>
        internal static string errorMessageNeedsMigration {
            get {
                return ResourceManager.GetString("errorMessageNeedsMigration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid.
        /// </summary>
        internal static string invalidSpecializationName {
            get {
                return ResourceManager.GetString("invalidSpecializationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Migration.
        /// </summary>
        internal static string migration {
            get {
                return ResourceManager.GetString("migration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Character Keybinds.
        /// </summary>
        internal static string moduleName {
            get {
                return ResourceManager.GetString("moduleName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Switching keybinds....
        /// </summary>
        internal static string switchKeybindsNotificationText {
            get {
                return ResourceManager.GetString("switchKeybindsNotificationText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Toggle Marker Visibility.
        /// </summary>
        internal static string troubleshootMarkers {
            get {
                return ResourceManager.GetString("troubleshootMarkers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reset Marker Positions.
        /// </summary>
        internal static string troubleshootResetMarkers {
            get {
                return ResourceManager.GetString("troubleshootResetMarkers", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will simulate the sequence of clicks.
        /// </summary>
        internal static string troubleshootTestButtonHint {
            get {
                return ResourceManager.GetString("troubleshootTestButtonHint", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Test.
        /// </summary>
        internal static string troubleshootTestButtonText {
            get {
                return ResourceManager.GetString("troubleshootTestButtonText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only change the position of the markes if you erxperience problems. \n\nEnable the markers by pressing &apos;Toggle Marker Visibility&apos;\nMove the marker to the following positions if they do not allign automatically:\n1. The Options menu tab\n2. The dropdown at the bottom right of the options menu\n3. The first entry of the dropdown when opening it\n4. The &apos;Yes&apos; button of the confirmation popup when importing key binds.
        /// </summary>
        internal static string troubleshootText {
            get {
                return ResourceManager.GetString("troubleshootText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Troubleshoot.
        /// </summary>
        internal static string troubleshootWindowName {
            get {
                return ResourceManager.GetString("troubleshootWindowName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All Specializations.
        /// </summary>
        internal static string wildcardSpecializationName {
            get {
                return ResourceManager.GetString("wildcardSpecializationName", resourceCulture);
            }
        }
    }
}
